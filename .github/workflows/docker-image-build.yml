name: Docker Image Build

on:
  workflow_dispatch:
  push:
    branches:
      - "dev"
    tags:
      - "v*"
  pull_request:
    branches:
      - "dev"

jobs:
  docker:
    runs-on: ubuntu-latest

    # needs permissions to write to the github docker registry
    permissions: write-all

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      #      - name: Install soci
      #        uses: lerentis/soci-installer@v1.0.1
      #        with:
      #          soci-release: "v0.3.0"

      #      - name: Set up containerd
      #        uses: crazy-max/ghaction-setup-containerd@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        id: build-push
        uses: docker/build-push-action@v5
        with:
          context: application
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          build-args: |
            ELSA_DATA_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            ELSA_DATA_BUILT=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            ELSA_DATA_REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}

      # - name: Pull image in containerd
      #  run: |
      #    IMAGE_BUILT=${{ fromJSON(steps.build-push.outputs.metadata)['image.name'] }}
      #    sudo ctr i pull $IMAGE_BUILT

      #- name: Soci Index
      #  run: |
      #    IMAGE_BUILT=${{ fromJSON(steps.build-push.outputs.metadata)['image.name'] }}
      #    sudo $HOME/.soci/soci create $IMAGE_BUILT
      #    sudo $HOME/.soci/soci push --user ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} $IMAGE_BUILT
